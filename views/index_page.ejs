<div class="header_infobox">
  <img src="/img/slpdb.svg">
  <h2>The Simple Ledger Protocol Explorer</h2>
  <p>browse tokens built on Bitcoin Cash</p>
  <form class="form">
    <div class="md-form index-search-wrapper">
      <input class="index-search-input form-control" type="text" placeholder="Search by txid, address or token name" aria-label="Search" id="main-search">
    </div>
  </form>
  <p class="normal">This website is built on top of <a target="_blank" href="https://github.com/simpleledger/SLPDB">SLPDB</a>, an offshoot of <a target="_blank" href="https://github.com/fountainhead-cash/bitd">BitDB FH</a>, view code and submit issues on <a target="_blank" href="https://github.com/blockparty-sh/slp-explorer">Github</a>.</p>
</div>

  <div class="row">
    <div class="">
      <div id="recent-transactions-table-container" class="">
        <h3 class="">Latest Transactions</h3>

        <% if (transactions.length === 0) { %>
            <h6>No recent transactions... is the SLPDB endpoint working?</h6></h6>
        <% } else { %>
          <div class="table-responsive">
            <table id="recent-transactions-table">
              <thead>
                <tr>
                  <th>Transaction Hash</th>
                  <th>Symbol</th>
                  <th>Type</th>
                  <th>Amount</th>
                  <th>Block Height</th>
                  <th>Block Time</th>
                </tr>
              </thead>
              <tbody>
                <% for (let o of transactions) { %>
                  <tr>
                    <td><span class="mono"><a class="txid" href="/#tx/<%= o.tx.h %>"><%= o.tx.h.substring(0, 12) %>...<%= o.tx.h.substring(59) %></a></span></td>
                    <td>
                      <a href="#token/<%= o.slp.detail.tokenIdHex %>">
                      <% if (tx_tokens[o.slp.detail.tokenIdHex].tokenDetails.symbol) { %>
                        <%= tx_tokens[o.slp.detail.tokenIdHex].tokenDetails.symbol %>
                      <% } else { %>
                        <span class="mono">[none]</span>
                      <% } %>
                      </a>
                    </td>
                    <td><%= o.slp.detail.transactionType %></td>
                    <td>
                      <% if (o.slp.detail.transactionType === 'SEND') { %>
                        <%= app.extract_sent_amount_from_tx(o) %>
                      <% } %>
                      <% if (o.slp.detail.transactionType === 'GENESIS'
                          || o.slp.detail.transactionType === 'MINT') { %>
                        <%= o.slp.detail.outputs[0].amount %>
                      <% } %>
                    </td>
                    <td><% if (o.blk) { %><%= o.blk.i %><% } else { %>Pending<% } %></td>
                    <td class="nowrap"><% if (o.blk) { %><%= new Date(o.blk.t*1000).toLocaleString() %><% } else { %>Pending<% } %></td>
                  </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        <% } %>
      </div>
    </div>
  </div>
  <script>
    $('#main-search form').submit(false);

$('#main-search').autocomplete({
  groupBy: 'category',
  preventBadQueries: false, // retry query in case slpdb hasnt yet indexed something
  triggerSelectOnValidInput: false, // disables reload on clicking into box again
  width: 'flex',
  lookup: function (query, done) {
    let search_value = $('#main-search').val().trim();

    try {
      if (slpjs.Utils.isCashAddress(search_value)) {
        search_value = slpjs.Utils.toSlpAddress(search_value);
      }
    } catch (e) { /* this is to work around https://github.com/simpleledger/slpjs/issues/10 */ }

    Promise.all([
      app.slpdb.query({
        "v": 3,
        "q": {
          "db": ["t"],
          "find": {
            "$or": [
              {
                "tokenDetails.tokenIdHex": search_value
              },
              {
                "tokenDetails.name": {
                  "$regex": "^"+search_value+".*",
                  "$options": "i"
                }
              },
              {
                "tokenDetails.symbol": {
                  "$regex": "^"+search_value+".*",
                  "$options": "i"
                }
              }
            ]
          },
          "limit": 10
        }
      }),
      app.slpdb.query({
        "v": 3,
        "q": {
          "db": ["u", "c"],
          "find": {"tx.h": search_value},
          "limit": 1
        }
      }),
      app.slpdb.query({
        "v": 3,
        "q": {
          "db": ["a"],
          "find": {"address": search_value},
          "limit": 1
        }
      })
    ]).then(([tokens, transactions, addresses]) => {
        console.log(addresses);
      let sugs = [];

      for (let m of tokens.t) {
        sugs.push({
          value: m.tokenDetails.symbol,
          data: {
            url: '/#token/'+m.tokenDetails.tokenIdHex,
            category: 'Tokens'
          }
        });
      }
      for (let m of transactions.u) {
        sugs.push({
          value: m.tx.h,
          data: {
            url: '/#tx/'+m.tx.h,
            category: 'Tx'
          }
        });
      }
      for (let m of transactions.c) {
        sugs.push({
          value: m.tx.h,
          data: {
            url: '/#tx/'+m.tx.h,
            category: 'Tx'
          }
        });
      }
      for (let m of addresses.a) {
        sugs.push({
          value: m.address,
          data: {
            url: '/#address/'+m.address,
            category: 'Address'
          }
        });
      }

      done({ suggestions: sugs });
    });
  },
  onSelect: function (sug) {
    app.router(sug.data.url);
  }
});
  </script>